name: CvApp Destroy

on:
  workflow_dispatch:
    inputs:
      enviroment:
        description: "Host IP"
        required: true
env:
    # credentials for deployment to AWS
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    # S3 bucket for the terraform state. 
    BUCKET_TF_STATE: ${{ secrets.BUCKET_TF }}
    AWS_REGION: eu-central-1
    SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
    EKS_NAME: cvapp-eks

jobs:    
  delete_eks:
    name: "Delete EKS cluster"
    runs-on: ubuntu-latest
    
    
    defaults:
      run:
        shell: bash
    steps:      
      
      - name: "Delete EKS"
        uses: appleboy/ssh-action@v1.0.3
        id: delete_eks
        with:
          host: ${{ github.event.inputs.enviroment }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY}}
          port: 22
          script: |
              aws iam delete-policy --policy-arn arn:aws:iam::975510455885:policy/AWSLoadBalancerControllerIAMPolicy
              
  
  terraform:
    name: "Terraform destroy"
    runs-on: ubuntu-latest
    #needs: delete_eks
    defaults:
      run:
        shell: bash
        working-directory: ./terra2
    steps:
      - name: Checkout source code 
        uses: actions/checkout@v4

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        id: init
        run: terraform init -backend-config "bucket=$BUCKET_TF_STATE"

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Destroy
        id: destroy
        run: terraform destroy -auto-approve
