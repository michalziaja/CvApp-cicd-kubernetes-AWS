name: CvApp CI

on:
  workflow_dispatch: # Uruchamianie workflow rÄ™cznie

env:
    # credentials for deployment to AWS
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    # S3 bucket for the terraform state. 
    BUCKET_TF_STATE: ${{ secrets.BUCKET_TF }}
    AWS_REGION: eu-central-1
    SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY}}

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    outputs: 
      host_ip: ${{ steps.get_ip.outputs.host_ip }}
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    steps:
      - name: Checkout source code 
        uses: actions/checkout@v4

      - name: Setup Terraform 
        uses: hashicorp/setup-terraform@v3
      
      - name: Decode SSH key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 400 private_key.pem

      - name: Terraform Init
        id: init
        run: terraform init -backend-config "bucket=$BUCKET_TF_STATE"

      # - name: Terraform Format
      #   id: fmt
      #   run: terraform fmt -check
      #   continue-on-error: true 

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false -out planfile
        continue-on-error: true 

      - name: Terraform Plan Status 
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -input=false -parallelism=1 planfile
           
      - name: Get host public IP
        id: get_ip
        run: |
          host_ip=$(terraform output host_public_ip | sed 's/\[//;s/\]//;s/,//;s/"//g' | tr -d '[:space:]')
          echo "Output $host_ip"
          echo "host_ip=$host_ip" >> $GITHUB_OUTPUT
          
      - name: Clean up
        if: always()
        run: rm -f private_key.pem
          
  configure:
    name: "Configure host instance"
    runs-on: ubuntu-latest
    needs: terraform
    
    defaults:
      run:
        shell: bash
        # working-directory: ./terraform
    steps:      
      - name: Show Host IP
        id: show_ip
        run: echo ${{ needs.terraform.outputs.host_ip }}
          
        
      - name: AWS Configure
        uses: appleboy/ssh-action@v1.0.3
        id: aws_configure
        with:
          host: ${{ needs.terraform.outputs.host_ip }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY}}
          port: 22
          script: |
              sudo chmod +x install.sh
              ./install.sh