name: CI


on:
  workflow_dispatch: 


jobs:
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app/frontend
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Check-out git repository  
        uses: actions/checkout@v4

      - name: USE NODEJS ${{ matrix.node-version }}
        uses: actions/setup-node@v4

      - name: Install project dependencies 
        working-directory: ./app/frontend
        run: |
          npm install
          #npm run lint
          #npm install --save-dev --save-exact prettier
          #npm run prettier
          npm test
        env:
          CI: true 

      - name: Build
        run: npm run build
        working-directory: ./app/frontend

              # Setup sonar-scanner
      # - name: Setup SonarQube
      #   uses: warchant/setup-sonar-scanner@v8

      # - name: Analyze with SonarCloud
      #   uses: sonarsource/sonarcloud-github-action@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   with:
      #     projectBaseDir: quiz-app
      #     args: >
      #       -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
      #       -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
      #       -Dsonar.host.url=${{ secrets.SONAR_URL }}
      #       -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      #       -Dsonar.sources=src/
      #       -Dsonar.verbose=true
  frontend_docker:
    runs-on: ubuntu-latest
    needs: frontend
    defaults:
      run:
        working-directory: ./app/frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t cvapp-web:latest .    

      - name: Tag Docker image
        run: |
          docker tag cvapp-web:latest michalziaja/cvapp-web:${{ github.run_number }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push image to Docker Hub
        run: |
          docker push michalziaja/cvapp-web:${{ github.run_number }}
  
  frontend_Trivy:
    needs: frontend_docker
    runs-on: ubuntu-latest
    steps:
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'docker.io/michalziaja/cvapp-web:${{ github.run_number }}'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'
##################BACKEND########################

  backend:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app/backend
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt >> /dev/null
      # - name: Test backend
      #   run: |
      #     python3 -m pytest
      # - name: Run backend
      #   run: |
      #     uvicorn app.app:app --reload
         
  backend_docker:
    runs-on: ubuntu-latest
    needs: backend
    defaults:
      run:
        working-directory: ./app/backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t cvapp-api:latest .    

      - name: Tag Docker image
        run: |
          docker tag cvapp-api:latest michalziaja/cvapp-api:${{ github.run_number }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push image to Docker Hub
        run: |
          docker push michalziaja/cvapp-api:${{ github.run_number }}
  
  backend_Trivy:
    needs: backend_docker
    runs-on: ubuntu-latest
    steps:
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'docker.io/michalziaja/cvapp-api:${{ github.run_number }}'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'
  
  update_k8s_files:
    name: Update k8s deployment file
    runs-on: ubuntu-latest
    needs: [ backend_Trivy, frontend_Trivy ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update deployment files
        run: |
          git config --global user.email "michalziaja88@gmail.com"
          git config --global user.name "michalziaja"
          sed -i 's|image: michalziaja/cvapp-api[^ ]*|image: michalziaja/cvapp-api:${{ github.run_number }}|' kubernetes/cvapp-api.yaml
          sed -i 's|image: michalziaja/cvapp-web[^ ]*|image: michalziaja/cvapp-web:${{ github.run_number }}|' kubernetes/cvapp-web.yaml
          git add kubernetes/cvapp-api.yaml
          git add kubernetes/cvapp-web.yaml
          git commit -m "Update images to tag ${{ github.run_number }}"
          git push origin main
  
  k8s-manifest-scan:
    needs: [update_k8s_files]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Snyk to check Kubernetes manifest file for issues
        uses: snyk/actions/iac@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          file: kubernetes/
          args: --severity-threshold=high